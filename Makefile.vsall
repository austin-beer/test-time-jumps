# boostorg/thread develop feature
BOOST_DEVELOP_DIR = $(MAKEDIR)\git_develop
# boostorg/thread feature/timespec_clocks feature
BOOST_FEATURE_DIR = $(MAKEDIR)\git_feature
# austin-beer/thread feature/timespec_clocks_prXX feature
BOOST_AUSTIN_DIR  = $(MAKEDIR)\git_austin

CXXFLAGS_COMMON    = /DBOOST_THREAD_PROVIDES_FUTURE
#CXXFLAGS_COMMON   = $(CXXFLAGS_COMMON) /DTEST_CPP14_FEATURES
CXXFLAGS_DEVELOP_1 = $(CXXFLAGS_COMMON)
CXXFLAGS_DEVELOP_2 = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS
CXXFLAGS_DEVELOP_3 = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS /DBOOST_THREAD_V2_SHARED_MUTEX
CXXFLAGS_FEATURE_1 = $(CXXFLAGS_COMMON)
CXXFLAGS_FEATURE_2 = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS
CXXFLAGS_FEATURE_3 = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS /DBOOST_THREAD_V2_SHARED_MUTEX
CXXFLAGS_AUSTIN_1  = $(CXXFLAGS_COMMON)
CXXFLAGS_AUSTIN_2  = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS
CXXFLAGS_AUSTIN_3  = $(CXXFLAGS_COMMON) /DBOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS /DBOOST_THREAD_V2_SHARED_MUTEX

COMPILE_BOOST_COMMON = b2 --abbreviate-paths --build-dir=dist --with-system --with-thread --with-date_time --with-atomic
COMPILE_BOOST_COMMON = $(COMPILE_BOOST_COMMON) toolset=$(TOOLSET) link=static variant=release address-model=64 stage

COMPILE_COMMON    = cl /EHsc /MD test_time_jumps.cpp
COMPILE_COMMON    = $(COMPILE_COMMON) libboost_system-$(DECORATION).lib
COMPILE_COMMON    = $(COMPILE_COMMON) libboost_thread-$(DECORATION).lib
COMPILE_COMMON    = $(COMPILE_COMMON) libboost_date_time-$(DECORATION).lib
COMPILE_COMMON    = $(COMPILE_COMMON) libboost_atomic-$(DECORATION).lib
#COMPILE_COMMON   = $(COMPILE_COMMON) /std:c++14
COMPILE_DEVELOP_1 = $(COMPILE_COMMON) /I $(BOOST_DEVELOP_DIR) $(CXXFLAGS_DEVELOP_1) /link /LIBPATH:$(BOOST_DEVELOP_DIR)\stage\lib
COMPILE_DEVELOP_2 = $(COMPILE_COMMON) /I $(BOOST_DEVELOP_DIR) $(CXXFLAGS_DEVELOP_2) /link /LIBPATH:$(BOOST_DEVELOP_DIR)\stage\lib
COMPILE_DEVELOP_3 = $(COMPILE_COMMON) /I $(BOOST_DEVELOP_DIR) $(CXXFLAGS_DEVELOP_3) /link /LIBPATH:$(BOOST_DEVELOP_DIR)\stage\lib
COMPILE_FEATURE_1 = $(COMPILE_COMMON) /I $(BOOST_FEATURE_DIR) $(CXXFLAGS_FEATURE_1) /link /LIBPATH:$(BOOST_FEATURE_DIR)\stage\lib
COMPILE_FEATURE_2 = $(COMPILE_COMMON) /I $(BOOST_FEATURE_DIR) $(CXXFLAGS_FEATURE_2) /link /LIBPATH:$(BOOST_FEATURE_DIR)\stage\lib
COMPILE_FEATURE_3 = $(COMPILE_COMMON) /I $(BOOST_FEATURE_DIR) $(CXXFLAGS_FEATURE_3) /link /LIBPATH:$(BOOST_FEATURE_DIR)\stage\lib
COMPILE_AUSTIN_1  = $(COMPILE_COMMON) /I $(BOOST_AUSTIN_DIR)  $(CXXFLAGS_AUSTIN_1)  /link /LIBPATH:$(BOOST_AUSTIN_DIR)\stage\lib
COMPILE_AUSTIN_2  = $(COMPILE_COMMON) /I $(BOOST_AUSTIN_DIR)  $(CXXFLAGS_AUSTIN_2)  /link /LIBPATH:$(BOOST_AUSTIN_DIR)\stage\lib
COMPILE_AUSTIN_3  = $(COMPILE_COMMON) /I $(BOOST_AUSTIN_DIR)  $(CXXFLAGS_AUSTIN_3)  /link /LIBPATH:$(BOOST_AUSTIN_DIR)\stage\lib

CLEAN_DEVELOP = ( @if exist $(BOOST_DEVELOP_DIR)\dist                                @rmdir /s /q $(BOOST_DEVELOP_DIR)\dist                                  ) && \
                ( @if exist $(BOOST_DEVELOP_DIR)\bin.v2                              @rmdir /s /q $(BOOST_DEVELOP_DIR)\bin.v2                                ) && \
                ( @if exist $(BOOST_DEVELOP_DIR)\stage                               @rmdir /s /q $(BOOST_DEVELOP_DIR)\stage                                 ) && \
                ( @if exist $(BOOST_DEVELOP_DIR)\libs\config\checks\architecture\bin @rmdir /s /q $(BOOST_DEVELOP_DIR)\libs\config\checks\architecture\bin   ) && \
                ( @if exist $(MAKEDIR)\test_time_jumps.obj @del /f /q $(MAKEDIR)\test_time_jumps.obj )

CLEAN_FEATURE = ( @if exist $(BOOST_FEATURE_DIR)\dist                                @rmdir /s /q $(BOOST_FEATURE_DIR)\dist                                 ) && \
                ( @if exist $(BOOST_FEATURE_DIR)\bin.v2                              @rmdir /s /q $(BOOST_FEATURE_DIR)\bin.v2                               ) && \
                ( @if exist $(BOOST_FEATURE_DIR)\stage                               @rmdir /s /q $(BOOST_FEATURE_DIR)\stage                                ) && \
                ( @if exist $(BOOST_FEATURE_DIR)\libs\config\checks\architecture\bin @rmdir /s /q $(BOOST_FEATURE_DIR)\libs\config\checks\architecture\bin  ) && \
                ( @if exist $(MAKEDIR)\test_time_jumps.obj @del /f /q $(MAKEDIR)\test_time_jumps.obj )

CLEAN_AUSTIN  = ( @if exist $(BOOST_AUSTIN_DIR)\dist                                 @rmdir /s /q $(BOOST_AUSTIN_DIR)\dist                                ) && \
                ( @if exist $(BOOST_AUSTIN_DIR)\bin.v2                               @rmdir /s /q $(BOOST_AUSTIN_DIR)\bin.v2                              ) && \
                ( @if exist $(BOOST_AUSTIN_DIR)\stage                                @rmdir /s /q $(BOOST_AUSTIN_DIR)\stage                               ) && \
                ( @if exist $(BOOST_AUSTIN_DIR)\libs\config\checks\architecture\bin  @rmdir /s /q $(BOOST_AUSTIN_DIR)\libs\config\checks\architecture\bin ) && \
                ( @if exist $(MAKEDIR)\test_time_jumps.obj @del /f /q $(MAKEDIR)\test_time_jumps.obj )

all: develop austin

clean: clean-develop clean-austin

develop: develop1 develop2 develop3

feature: feature1 feature2 feature3

austin: austin1 austin2 austin3

clean-develop:
	$(CLEAN_DEVELOP)

clean-feature:
	$(CLEAN_FEATURE)

clean-austin:
	$(CLEAN_AUSTIN)

develop1: test_time_jumps.cpp
	$(CLEAN_DEVELOP) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_develop1_default.* && \
	@cd $(BOOST_DEVELOP_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_DEVELOP_1) /out:test_time_jumps_develop1_default.exe && \
	$(CLEAN_DEVELOP)

develop2: test_time_jumps.cpp
	$(CLEAN_DEVELOP) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_develop2_generic_shared.* && \
	@cd $(BOOST_DEVELOP_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_DEVELOP_2) /out:test_time_jumps_develop2_generic_shared.exe && \
	$(CLEAN_DEVELOP)

develop3: test_time_jumps.cpp
	$(CLEAN_DEVELOP) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_develop3_v2_shared.* && \
	@cd $(BOOST_DEVELOP_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_DEVELOP_3) /out:test_time_jumps_develop3_v2_shared.exe && \
	$(CLEAN_DEVELOP)

feature1: test_time_jumps.cpp
	$(CLEAN_FEATURE) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_feature1_default.* && \
	@cd $(BOOST_FEATURE_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_FEATURE_1) /out:test_time_jumps_feature1_default.exe && \
	$(CLEAN_FEATURE)

feature2: test_time_jumps.cpp
	$(CLEAN_FEATURE) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_feature2_generic_shared.* && \
	@cd $(BOOST_FEATURE_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_FEATURE_2) /out:test_time_jumps_feature2_generic_shared.exe && \
	$(CLEAN_FEATURE)

feature3: test_time_jumps.cpp
	$(CLEAN_FEATURE) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_feature3_v2_shared.* && \
	@cd $(BOOST_FEATURE_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_FEATURE_3) /out:test_time_jumps_feature3_v2_shared.exe && \
	$(CLEAN_FEATURE)

austin1: test_time_jumps.cpp
	$(CLEAN_AUSTIN) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_austin1_default.* && \
	@cd $(BOOST_AUSTIN_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_AUSTIN_1) /out:test_time_jumps_austin1_default.exe && \
	$(CLEAN_AUSTIN)

austin2: test_time_jumps.cpp
	$(CLEAN_AUSTIN) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_austin2_generic_shared.* && \
	@cd $(BOOST_AUSTIN_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_AUSTIN_2) /out:test_time_jumps_austin2_generic_shared.exe && \
	$(CLEAN_AUSTIN)

austin3: test_time_jumps.cpp
	$(CLEAN_AUSTIN) && \
	@del /f /q $(MAKEDIR)\test_time_jumps_austin3_v2_shared.* && \
	@cd $(BOOST_AUSTIN_DIR) && $(COMPILE_BOOST_COMMON) && \
	@cd $(MAKEDIR) && $(COMPILE_AUSTIN_3) /out:test_time_jumps_austin3_v2_shared.exe && \
	$(CLEAN_AUSTIN)
